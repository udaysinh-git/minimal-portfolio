<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>{{ title }}</title>
    <meta
      name="description"
      content="Explore Udaysinh Sapate's portfolio showcasing achievements, projects, blog posts, and resume. Discover expertise in software development, AI, and cybersecurity."
    />
    <link rel="stylesheet" href="/styles/styles.css" />
    {% if title == "Contact" %}
    <link rel="stylesheet" href="/styles/contact.css" />
    {% endif %}
    <link rel="stylesheet" href="/styles/icons.css" />
    <link
      rel="icon"
      href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>üêß</text></svg>"
    />
    <!-- Preload creative serverless endpoints globally -->
    <script src="/scripts/creative-preload.js" defer></script>
    <!-- Chart.js will be loaded dynamically when needed -->
    <script src="/scripts/script-optimizer.js" defer></script>
    {% if global.debug %}
    <script src="/scripts/performance-monitor.js" defer></script>
    {% endif %}
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  </head>
  <body class="{{ theme }}">
    <header>
      <div class="container">
        <nav id="nav-menu" class="nav-menu">
          <ul>
            <li>
              <a href="/" class="{% if title == 'Home' %}active{% endif %}"
                >~/home</a
              >
            </li>
            <li>/</li>
            <li>
              <a
                href="/achievements"
                class="{% if title == 'Achievements' %}active{% endif %}"
                >Achievements</a
              >
            </li>
            <li>/</li>
            <li>
              <a
                href="/github"
                class="{% if title == 'GitHub Repos' %}active{% endif %}"
                >GitHub Repos</a
              >
            </li>
            <li>/</li>
            <li>
              <a
                href="/creative"
                class="{% if title == 'Creative' %}active{% endif %}"
                >Creative</a
              >
            </li>
            <li>/</li>
            <li>
              <a href="/blog" class="{% if title == 'Blog' %}active{% endif %}"
                >Blog</a
              >
            </li>
            <li>/</li>
            <li>
              <a
                href="/resume"
                class="{% if title == 'Resume' %}active{% endif %}"
                >Resume</a
              >
            </li>
            <li>/</li>
            <li>
              <a
                href="/contact"
                class="{% if title == 'Contact' %}active{% endif %}"
                >Contact</a
              >
            </li>
            <li>/</li>
            <li>
              <a href="#" id="theme-toggle">themes</a>
            </li>
          </ul>
        </nav>
      </div>
    </header>
    <main class="container">{{ content | safe }}</main>
    <footer>
      <div class="footer-container">
        <div class="footer-left">
          <p>&copy; {{ currentYear }} Udaysinh's Portfolio</p>
        </div>
        <div class="footer-right">
          <a
            href="https://github.com/udaysinh-git/minimal-portfolio"
            target="_blank"
            rel="noopener noreferrer"
            class="github-link"
          >
            View Source on GitHub
          </a>
        </div>
      </div>
    </footer>
    {% if showBackToTop or title == "Resume" or title == "GitHub Repos" %}
    <button id="back-to-top" aria-label="Back to top">‚òùüèª</button>
    {% endif %}
    <div id="theme-toast" class="theme-toast">
      Theme changed to: <span id="theme-name"></span>
    </div>
    <script>
      // Set session start time if not already set
      if (!localStorage.getItem("sessionStartTime")) {
        localStorage.setItem("sessionStartTime", Date.now())
      }
    </script>
    <script src="/scripts/contact.js" defer></script>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const themeToggle = document.getElementById("theme-toggle")
        const backToTopButton = document.getElementById("back-to-top")
        const themeToast = document.getElementById("theme-toast")
        const themeName = document.getElementById("theme-name")
        const increaseFontButton = document.getElementById("increase-font")
        const decreaseFontButton = document.getElementById("decrease-font")
        const fontSwitcherButton = document.getElementById("font-switcher")
        const fab = document.getElementById("fab")
        const fabOptions = document.querySelector(".fab-options")
        const postContent = document.querySelector(".post-content")

        const themes = [
          "dark-mode",
          "light-mode",
          "pastel-mode",
          "eye-soothing-mode",
          "solarized-dark-mode",
          "solarized-light-mode",
          "monokai-mode",
          "dracula-mode",
          "gruvbox-dark-mode",
          "nord-mode",
          "one-dark-mode",
          "material-dark-mode",
          "material-light-mode",
        ]
        let currentThemeIndex = 0

        const fonts = [
          { name: "Inter", family: "'Inter', sans-serif" },
          { name: "Montserrat", family: "'Montserrat', sans-serif" },
          { name: "Open Sans", family: "'Open Sans', sans-serif" },
          { name: "Roboto", family: "'Roboto', sans-serif" },
          { name: "Lato", family: "'Lato', sans-serif" },
          { name: "Courier Prime", family: "'Courier Prime', monospace" },
        ]
        let currentFontIndex = 0

        // Detect user's preferred color scheme
        const prefersDarkScheme = window.matchMedia(
          "(prefers-color-scheme: dark)"
        ).matches
        const prefersLightScheme = window.matchMedia(
          "(prefers-color-scheme: light)"
        ).matches

        // Load saved theme or set based on user's preference
        const savedTheme = localStorage.getItem("theme")
        if (savedTheme) {
          document.body.className = savedTheme
          currentThemeIndex = themes.indexOf(savedTheme)
        } else if (prefersDarkScheme) {
          document.body.className = "dark-mode"
          currentThemeIndex = themes.indexOf("dark-mode")
        } else if (prefersLightScheme) {
          document.body.className = "light-mode"
          currentThemeIndex = themes.indexOf("light-mode")
        } else {
          document.body.className = "light-mode" // Default to light mode if no preference
          currentThemeIndex = themes.indexOf("light-mode")
        }

        if (themeToggle) {
          themeToggle.addEventListener("click", () => {
            currentThemeIndex = (currentThemeIndex + 1) % themes.length
            const newTheme = themes[currentThemeIndex]
            document.body.className = newTheme
            localStorage.setItem("theme", newTheme)

            // Show toast notification
            themeName.textContent = newTheme.replace(/-/g, " ")
            themeToast.classList.add("show")
            setTimeout(() => {
              themeToast.classList.remove("show")
            }, 3000)
          })
        }

        if (fab && fabOptions) {
          fab.addEventListener("click", () => {
            fab.classList.toggle("show-options")
          })
        }

        // Show back-to-top
        if (backToTopButton) {
          window.addEventListener("scroll", () => {
            if (window.scrollY > 300) {
              backToTopButton.classList.add("show")
            } else {
              backToTopButton.classList.remove("show")
            }
          })

          backToTopButton.addEventListener("click", () => {
            window.scrollTo({ top: 0, behavior: "smooth" })
          })
        }

        if (increaseFontButton && postContent) {
          increaseFontButton.addEventListener("click", () => {
            const currentFontSize =
              window.getComputedStyle(postContent).fontSize
            const newFontSize = parseFloat(currentFontSize) + 2
            postContent.style.fontSize = `${newFontSize}px`
          })
        }

        if (decreaseFontButton && postContent) {
          decreaseFontButton.addEventListener("click", () => {
            const currentFontSize =
              window.getComputedStyle(postContent).fontSize
            const newFontSize = parseFloat(currentFontSize) - 2
            postContent.style.fontSize = `${newFontSize}px`
          })
        }

        if (fontSwitcherButton && postContent) {
          fontSwitcherButton.addEventListener("click", () => {
            currentFontIndex = (currentFontIndex + 1) % fonts.length
            const newFont = fonts[currentFontIndex]
            postContent.style.setProperty("--font-family", newFont.family)
            localStorage.setItem("font", newFont.family)

            // Show toast notification
            fontName.textContent = newFont.name
            fontToast.classList.add("show")
            setTimeout(() => {
              fontToast.classList.remove("show")
            }, 3000)
          })

          // Load saved font for post
          const savedFont = localStorage.getItem("font")
          if (savedFont) {
            postContent.style.setProperty("--font-family", savedFont)
            currentFontIndex = fonts.findIndex(
              (font) => font.family === savedFont
            )
          }
        }

        // Function to format date as "Month Day, Year"
        function formatDate(dateString) {
          const options = { year: "numeric", month: "long", day: "numeric" }
          const date = new Date(dateString)
          return date.toLocaleDateString(undefined, options)
        }

        const dateElements = document.querySelectorAll(".post-date")
        dateElements.forEach((elem) => {
          const date = elem.getAttribute("data-date")
          if (date) {
            elem.textContent = formatDate(date)
          }
        })
      })
    </script>
  </body>
  <!-- Cloudflare Web Analytics -->
  <script
    defer
    src="https://static.cloudflareinsights.com/beacon.min.js"
    data-cf-beacon='{"token": "05374401d9204e4bbb57618dc9935ff8"}'
  ></script>
  <!-- End Cloudflare Web Analytics -->
</html>
